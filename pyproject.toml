[build-system]
requires = ["hatchling<=1.21.0"]  
build-backend = "hatchling.build"

[project]
name = "EasyReflectometryLib"
version = "0.0.7"
description = "A reflectometry python package built on the EasyScience framework."
readme = "README.rst"
authors = [
    {name = "Andrew R. McCluskey", email = "andrew.mccluskey@ess.eu"}, 
    {name = "Andrew Sazonov"}, 
    {name = "Simon Ward"},
    {name = "Andreas Pedersen", email = "andreas.pedersen@ess.eu"}
]
maintainers = [
    {name = "Andrew R. McCluskey", email = "andrew.mccluskey@ess.eu"},
    {name = "Andreas Pedersen", email = "andreas.pedersen@ess.eu"}
]
license = "BSD-3-Clause"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering",
    "Development Status :: 3 - Alpha"
]
requires-python = ">=3.9,<3.12"
dependencies = [
    "easyScienceCore>=0.3.1",
    "refnx>=0.1.15",
    "refl1d>=0.8.14",
    "scipp>=23.12.0",
    "orsopy>=0.0.4"
]

[project.optional-dependencies]
dev = [
    "build",
    "codecov>=2.1.11",
    "coverage",
    "coveralls",
    "flake8>=6.0.0",
    "ipykernel",
    "jupyter>=1.0.0",
    "jupyterlab",
    "plopp",
    "pytest>=5.2",
    "pytest-cov>=3.0.0",
    "ruff",
    "toml>=0.10",
    "yapf>=0.31.0",
]
docs = [
    "nbsphinx",
    "sphinx_book_theme",
    "sphinx_autodoc_typehints",
    "toml"
]

[project.urls]
homepage = "https://docs.easyreflectometry.org"
documentation = "https://docs.easyreflectometry.org"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["EasyReflectometry"]

[tool.coverage.run]
source = ['EasyReflectometry']

[tool.github.info]
organization = 'easyScience'
repo = 'EasyReflectometryLib'

[tool.ruff]
line-length = 127
exclude = [
    "docs",
]

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint]
ignore-init-module-imports = true
select = [
    # flake8 settings from existing CI setup
    "E9", "F63", "F7", "F82",
    # Code should be polished to fulfill all cases bellow
    # https://docs.astral.sh/ruff/rules/
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
#    "UP",
    # flake8-bugbear
#    "B",
    # flake8-simplify
#    "SIM",
    # isort
    "I",
    # flake8-bandit
    "S",
]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.per-file-ignores]
# allow asserts in test files
"*test_*.py" = ["S101"]

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py{39,310,311}
[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311
[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    macos-latest: macos
    windows-latest: windows
[testenv]
passenv =
    CI
    GITHUB_ACTIONS
    GITHUB_ACTION
    GITHUB_REF
    GITHUB_REPOSITORY
    GITHUB_HEAD_REF
    GITHUB_RUN_ID
    GITHUB_SHA
    COVERAGE_FILE
deps = coverage
commands =
    pip install -e '.[dev]'
    pytest --cov --cov-report=xml
"""

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
